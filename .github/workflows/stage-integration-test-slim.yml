name: PR Integration Test (branches - slim)
# INTEGRATION TEST FOR PULL REQUESTS ON BRANCHES != MAIN
# This file represents a slim version of the "BTP Setup Automator" integration tests
# for PRs on branches
# It executes the following steps:
# - based on the branch it creates a temporary Docker image and pushes it to the GH registry
# - it executes the integration tests on the temporary docker image
# - it deletes the temporary Docker image after execution
#
# All tests are executed in sequence on one BTP account to avoid entitlement limits
# This is why not matrix strategy is used
# The steps of a job must execute in any case, so we use always()

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: tmp-${{ github.ref_name }}
  LABEL: ${{ github.ref_name }}
  ORG: sap-samples

jobs:
  build-temporary-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image_path: ${{ steps.set-image-path.outputs.image_path }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:v0.10.6
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME }}
      - name: Build Docker image
        id: dockerbuild
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          file: ./config/Dockerfile
          build-args: |
            BTPSA_VERSION_GIT_ARG=${{ github.sha }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - id: set-image-path
        name: Set image path to output
        run: echo "image_path=${{ fromJSON(steps.dockerbuild.outputs.metadata)['image.name'] }}" >> $GITHUB_OUTPUT

  integration-test-for-pr-slim:
    needs: build-temporary-image
    runs-on: ubuntu-latest
    container:
      image: ${{ needs.build-temporary-image.outputs.image_path }}
      options: --user root
    env:
      BTPSA_PARAM_MYEMAIL: ${{ secrets.BTPSA_PARAM_MYEMAIL }}
      BTPSA_PARAM_GLOBALACCOUNT: ${{ secrets.BTPSA_PARAM_GLOBALACCOUNT }}
      BTPSA_PARAM_MYPASSWORD: ${{ secrets.BTPSA_PARAM_MYPASSWORD }}
    steps:
      - name: 'Integration test 01: Default use case'
        if: ${{ always() }}
        working-directory: /home/user
        shell: bash
        run: ./btpsa -parameterfile 'https://raw.githubusercontent.com/SAP-samples/btp-setup-automator/main/tests/integrationtests/parameterfiles/integrationtest01.json'
      - name: 'Integration test 07: Setup SAP Task Center'
        if: ${{ always() }}
        working-directory: /home/user
        shell: bash
        run: ./btpsa -parameterfile 'https://raw.githubusercontent.com/SAP-samples/btp-setup-automator/main/tests/integrationtests/parameterfiles/integrationtest07.json'
      - name: "Integration test 04: Only app subscriptions"
        if: ${{ always() }}
        working-directory: /home/user
        shell: bash
        run: ./btpsa -parameterfile 'https://raw.githubusercontent.com/SAP-samples/btp-setup-automator/main/tests/integrationtests/parameterfiles/integrationtest04.json'
      - name: "Integration test 05: Only one service without app subscriptions and with an admin, that is the same like the one logging into the script."
        if: ${{ always() }}
        working-directory: /home/user
        shell: bash
        run: ./btpsa -parameterfile 'https://raw.githubusercontent.com/SAP-samples/btp-setup-automator/main/tests/integrationtests/parameterfiles/integrationtest05.json'
      - name: "Integration test 06: create service keys"
        if: ${{ always() }}
        working-directory: /home/user
        shell: bash
        run: ./btpsa -parameterfile 'https://raw.githubusercontent.com/SAP-samples/btp-setup-automator/main/tests/integrationtests/parameterfiles/integrationtest06.json'

  delete-temporary-image:
    if: ${{ success() }} || ${{ failure() }}
    needs: [build-temporary-image, integration-test-for-pr-slim]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        env:
          IMAGE: ${{ needs.build-temporary-image.outputs.image_path }}
        with:
          github-token: ${{ secrets.DELETE_IMAGE_TOKEN }}
          script: |
            const imageName = process.env.IMAGE_NAME;
            const {owner, repo} = context.repo; 
            const imageNameString = `${imageName}`;
            const imageNameLowerCase = imageNameString.toLowerCase();
            const packageName = `${repo}/${imageNameLowerCase}`;

            const result = await github.rest.packages.getPackageForOrganization({
              package_type: "container",
              package_name: packageName,
              org: owner
            });

            const deleteResult = await github.rest.packages.deletePackageForOrg({
              package_type: result.data.package_type,
              package_name: result.data.name,
              org: result.data.owner.login
            });
