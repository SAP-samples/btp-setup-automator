{% macro addSchemaIfExists(plan) -%}
{% if plan.schemas is defined and plan.schemas.service_instance is defined and plan.schemas.service_instance.create is defined and plan.schemas.service_instance.create.parameters is defined and plan.schemas.service_instance.create.parameters -%}
, "parameters" : {{ plan.schemas.service_instance.create.parameters | tojson }}
{% endif %}
{%- endmacro -%}
{% macro addRequiredFieldIfSchemaExists(plan) -%}
{% if plan.schemas is defined and plan.schemas.service_instance is defined and plan.schemas.service_instance.create is defined and plan.schemas.service_instance.create.parameters is defined -%}
, "required" : ["parameters"]
{% endif %}
{%- endmacro -%}
{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "JSON Schema for BTPSA use case definitions",
    "description": "Use case definitions are described using properties and values defined in this schema",
    "type": "object",
    "additionalProperties": false,
    "properties": {
        "$schema": {
            "type": "string"
        },
        "aboutThisUseCase": {
            "type": "object",
            "description": "name of the service",
            "title": "name of the service",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the service (internal use only)",
                    "title": "ID of the service (internal use only)",
                    "default": "1234"
                },
                "name": {
                    "type": "string",
                    "description": "name of the use case",
                    "title": "name of the use case"
                },
                "description": {
                    "type": "string",
                    "description": "description of the use case",
                    "title": "description of the use case"
                },
                "author": {
                    "type": "string",
                    "description": "email of the author of this use case",
                    "title": "email of the author of this use case",
                    "format": "email"
                },
                "testStatus": {
                    "type": "string",
                    "description": "test status of the use case",
                    "title": "test status of the use case",
                    "enum": ["tested successfully", "not tested"]
                },
                "usageStatus": {
                    "type": "string",
                    "description": "usage status of the use case",
                    "title": "usage status of the use case",
                    "enum": ["READY TO BE USED", "NOT READY TO BE USED"]
                },
                "relatedLinks": {
                    "type": "array",
                    "description": "links related to this use case",
                    "title": "links related to this use case"
                }
            },
            "required": ["name", "author", "testStatus", "usageStatus"]
        },
        "assignrolecollections": {
            "type": "array",
            "description": "role collections to be assigned to a service",
            "title": "role collections to be assigned to a service",
            "additionalProperties": false,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "required": ["name", "type", "assignedUserGroupsFromParameterFile"],
                "properties": {
                    "assignedRoles":{
                        "type": "array",
                        "description": "roles to be assigned to a custom role collection",
                        "title": "roles for custom role collection",
                        "additionalProperties": false,
                        "items": {
                            "type": "string",
                            "description": "roles name",
                            "title": "roles name"
                        }
                    },
                    "assignedUserGroupsFromParameterFile": {
                        "type": "array",
                        "description": "user groups to be assigned from the parameter file",
                        "title": "user groups from parameter file"
                    },
                    "idp":{
                        "type": "string",
                        "description": "the identity provider that hosts the user. ",
                        "title": "IdP name",
                        "default": null
                    },
                    "level": {
                        "type": "string",
                        "description": "level of the role collection",
                        "title": "level of the role collection",
                        "enum": ["global account","sub account", "org", "space"]
                    },
                    "name": {
                        "type": "string",
                        "description": "name of the role collection",
                        "title": "name of the role collection"
                    },
                    "type": {
                        "type": "string",
                        "description": "type of the role collection",
                        "title": "type of the role collection",
                        "enum": ["account", "cloudfoundry", "custom"]
                    }
                }
            }
        },
        "executeAfterAccountSetup": {
            "type": "array",
            "description": "create a list of commands, that should be executed after the SAP BTP account is setup",
            "title": "commands to run after setup of SAP BTP account",
            "additionalProperties": false,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "required": ["command", "description"],
                "properties": {
                    "command": {
                        "type": "string",
                        "description": "the command that should be executed within the btpsa container image",
                        "title": "command to execute"
                    },
                    "description": {
                        "type": "string",
                        "description": "description of what the command will do",
                        "title": "description of the command"
                    }
                }
            }
        },
        "executeBeforeAccountSetup": {
            "type": "array",
            "description": "create a list of commands, that should be executed before the SAP BTP account is setup",
            "title": "commands to run before setup of SAP BTP account",
            "additionalProperties": false,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "required": ["command", "description"],
                "properties": {
                    "command": {
                        "type": "string",
                        "description": "the command that should be executed within the btpsa container image",
                        "title": "command to execute"
                    },
                    "description": {
                        "type": "string",
                        "description": "description of what the command will do",
                        "title": "description of the command"
                    }
                }
            }
        },
        "executeToPruneUseCase": {
            "type": "array",
            "description": "create a list of commands, that should be executed to prune the use case from your SAP BTP account",
            "title": "commands to run to prune use case from your SAP BTP account",
            "additionalProperties": false,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "required": ["command", "description"],
                "properties": {
                    "command": {
                        "type": "string",
                        "description": "the command that should be executed within the btpsa container image",
                        "title": "command to execute"
                    },
                    "description": {
                        "type": "string",
                        "description": "description of what the command will do",
                        "title": "description of the command"
                    }
                }
            }
        },
        "services": {
            "type": "array",
            "additionalProperties": false,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "required": ["name", "category"],
                "properties": {
                    "amount": {
                        "type": "integer",
                        "description": "amount to be used for the service",
                        "title": "amount to be used for the service",
                        "default": 1
                    },
                    "assignrolecollections": {
                        "type": "array",
                        "description": "list of role collections to be created within the btp account",
                        "title": "list of role collections to be created within the btp account",
                        "default": []
                    },
                    "category": {
                        "type": "string",
                        "description": "category of the service",
                        "title": "category of the service",
                        "enum": ["SERVICE", "APPLICATION", "CF_CUP_SERVICE", "ENVIRONMENT"]
                    },
                    "createServiceKeys": {
                        "type": "array",
                        "description": "list of service keys to be created for the service",
                        "title": "list of service keys to be created for the service",
                        "default": []
                    },
                    "customerDeveloped": {
                        "type": "boolean",
                        "description": "custom developed application",
                        "title": "custom developed application",
                        "default": false
                    },
                    "entitleonly": {
                        "type": "boolean",
                        "description": "only entitlement -  if true, the service will only be entitled, but not assigned to a role collection",
                        "title": "only entitlement (no service instances will be created by the tool)",
                        "default": false,
                        "enum": [true, false]
                    },
                    "instancename": {
                        "type": "string",
                        "description": "name of the service instance",
                        "title": "name of the service instance"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of the service",
                        "title": "name of the service"
                    },
                    "parameters": {
                        "type": ["object", "string"],
                        "description": "parameters for the service",
                        "title": "parameters for the service"
                    },
                    "plan": {
                        "type": "string",
                        "description": "plan name of the service",
                        "title": "plan name of the service"
                    },
                    "planCatalogName": {
                        "type": "string",
                        "description": "catalog name of the service plan",
                        "title": "catalog name of the service plan"
                    },
                    
                    "relatedLinks": {
                        "type": "array",
                        "description": "links related to this service",
                        "title": "links related to this service"
                    },
                    "repeatstatusrequest": {
                        "type": "integer",
                        "description": "number of seconds when status should be checked",
                        "title": "number of seconds when status should be checked",
                        "default": 5
                    },
                    "repeatstatustimeout": {
                        "type": "integer",
                        "description": "timeout in seconds after which the script will stop checking the status",
                        "title": "timeout in seconds after which the script will stop checking the status",
                        "default": 3600
                    },
                    "requiredrolecollections": {
                        "type": "array",
                        "description": "list of role collections to assign users to",
                        "title": "list of role collections to assign users to",
                        "default": null,
                        "additionalProperties": false,
                        "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "name of the role collection",
                                    "title": "name of the role collection"
                                },
                                "assignedUserGroupsFromParameterFile": {
                                    "type": "array",
                                    "description": "list of user groups to assign the role collection",
                                    "title": "list of user groups to assign the role collection"
                                },
                                "idp":{
                                    "type": "string",
                                    "description": "the identity provider that hosts the user. ",
                                    "title": "IdP name",
                                    "default": null
                                }
                            }
                        }
                    },
                    "requiredServices": {
                        "type": "array",
                        "description": "list of services that need to be instantiated before instantiating this service",
                        "title": "list of services that need to be instantiated before instantiating this service",
                        "default": []
                    },
                    "serviceparameterfile": {
                        "type": "string",
                        "description": "parameter file for the service in case you want to provide the parameters via a file",
                        "title": "parameter file for the service"
                    },
                    "statusResponse": {
                        "type": "object",
                        "description": "information that is available only durng the execution of the script (should not be set in the usecase.json file)",
                        "title": "creation info"
                    },
                    "targetenvironment": {
                        "type": "string",
                        "description": "environment in which the service should be created",
                        "title": "environment in which the service should be created",
                        "default": "cloudfoundry",
                        "enum": ["cloudfoundry", "kymaruntime", "sapbtp"]
                    }
                },
                "allOf": [
                    {
                        "if": { "properties": { "category": { "const": "CF_CUP_SERVICE"} } },
                        "then" :{
                                "properties": { 
                                    "parameters": { "default": "-p '{\"username\":\"admin1\",\"password\":\"pa55woRD1\"}'"}, 
                                    "name": { "default": "nameForYourCfUserProvidedInstance"},
                                    "category": { "default": "CF_CUP_SERVICE"}
                                }, "required": ["parameters", "name", "category"], "additionalProperties": false
                        }
                    },
                    {% for category in btpservicelist -%}
                    {
                        "if": { "properties": { "category": { "const": "{{ category.name }}"} } },
                        "then" :{
                                    "properties": { "name": { "enum": [{% for service in category.list -%}"{{ service.name }}"{% if not loop.last %}, {% endif %}{% endfor -%}] } },
                                    "allOf": [
                                        {% for service in category.list -%}
                                        {
                                            "if": { "properties": { "name": { "const": "{{ service.name }}"} } },
                                            "then" :{
                                                "properties": {
                                                    "plan": { "enum": [{% for plan in service.servicePlans-%}"{{ plan.name }}"{% if not loop.last %}, {%- endif %}{% endfor -%}] },
                                                    "name": { "description": "{{ service.displayName }}: {{ service.description | trim }}"}
                                                },
                                                "allOf": [
                                                    {% for plan in service.servicePlans -%}
                                                    {
                                                        "if": { "properties": { "plan": { "const": "{{ plan.name }}"} } },
                                                        "then" :{
                                                            "properties": {
                                                                "plan": { "description": "{{ category.name.lower() }} plan >{{ plan.name }}< for >{{ service.name }}< is available in data centers:{% for datacenter in plan.dataCenters -%}\n- {{ datacenter }}{% if not loop.last %}{% endif %}{% endfor %}" }
                                                                {{ addSchemaIfExists(plan) }}
                                                            }{{ addRequiredFieldIfSchemaExists(plan) }}
                                                        }
                                                    }{% if not loop.last %}, {% endif -%}
                                                    {% endfor -%}
                                                ]
                                            }
                                        }{% if not loop.last %}, {% endif -%}
                                        {% endfor -%}
                                    ]
                                }
                    }{% if not loop.last %}, {% endif %}
                    {% endfor -%}
                ]
            }
        } 
    }
}
